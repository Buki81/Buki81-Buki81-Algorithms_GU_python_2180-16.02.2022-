"""
Задание 4.
Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.
Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.
Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

archiv = {
    'One': ('qwer', 'ON'),
    'Two': ('tyuio', 'OFF'),
    'Three': ('cfdsa', 'OFF'),
    'Four': ('mnfds', 'ON'),
    'Five': ('12fddh', 'OFF')
}
name_user = 'One'


def user_activ(users, name):  # Суммарная O(n)
    if users[name][1] == 'ON':  # O(n)
        return f'Логин: {name}. Доступ разрешен'
    else:
        return f'Логин: {name}. Пройдите активацию аккаунта'


print(user_activ(archiv, name_user))


# ---------------------
def user_activ2(users, name):  # Суммарная O(n^2)
    c = dict(zip(list(users.keys()), list(i[1] for i in list(users.values()))))  # O(n^2)
    for k, v in c.items():  # O(n^2)
        if k == name and v == 'ON':  # O(n)
            return f'Логин: {name}. Доступ разрешен'
        else:
            return f'Логин: {name}. Пройдите активацию аккаунта'


print(user_activ2(archiv, name_user))
